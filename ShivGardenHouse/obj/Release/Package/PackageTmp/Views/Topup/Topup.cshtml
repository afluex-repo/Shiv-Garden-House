@model ShivGardenHouse.Models.Topup
@{
    ViewBag.Title = "Topup";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@using (Html.BeginForm("Topup", "Topup", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    
    <p style="color: red">
        @TempData["Branch"]
    </p>
       
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Topup <small></small></h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a></li>
                     @*<li><a href="/Master/BranchList" title="List Of Branch"><i class="fa fa-list-ul"></i></a></li>*@
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <div class="row">
                        <div class="col-lg-12">
                            <p style="color:red">
                                @TempData["Topup"]
                            </p>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        Login ID<span style="color: red">*</span><span id="memberName" style="color: blue; float: right"></span>
                                        @Html.TextBoxFor(m => m.LoginID, new { @class = "form-control", @Placeholder = "Login ID", @onchange = "return getMemberName();" })
                                        @Html.HiddenFor(m => m.Fk_UserId)
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    Select EPin <span style="color: red">*</span>
                                    @Html.DropDownListFor(m => m.EPinNo, new SelectList(ViewBag.ddlEpin, "Value", "Text"), new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br />
                                        <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Topup" id="btnTopup" name="btnTopup" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function getMemberName() {
        var sponsorID = $('#LoginID').val();
        $.ajax({
            url: '/Customer/GetSponsorName', type: 'post', dataType: 'json',
            data: { 'SponsorID': sponsorID },
            success: function (data) {
                if (data.Result == "yes") {
                    document.getElementById('memberName').innerHTML = data.SponsorName;
                    $("#Fk_UserId").val(data.UserID);
                    $("#memberName").removeClass('errortext');
                    $("#LoginID").removeClass('errortext');
                    getEpinList();
                }
                else if (data.Result == "no") {
                    $("#EPinNo").html(""); // clear before appending new list 
                    $("#EPinNo").empty();
                    $("#EPinNo").append($('<option></option>').val(0).html('Select EPin'));

                    document.getElementById('memberName').innerHTML = " ";
                    $("#memberName").addClass('errortext');
                    $("#LoginID").addClass('errortext');
                    $('#LoginID').focus();
                    $('#LoginID').val('');
                    alert("Invalid Login ID");
                }
            }

        });
    }

    function getEpinList() {
        var userID = $('#Fk_UserId').val();
        //var values = $('#SectorID').val();
        var tr = [];
        $.ajax({
            url: "/Topup/GetEPinList",
            Type: "Get",
            DataType: "JSON",
            data: { UserID : userID },
            success: function (data) {
                var j = 1;
                if (data.Result == "yes") {
                    $("#EPinNo").html(""); // clear before appending new list 
                    $("#EPinNo").empty();
                    $("#EPinNo").append(
                          $('<option></option>').val(0).html('Select EPin'));
                    $.each(data.ddlEPin, function (index, Sectorcount) {
                        $("#EPinNo").append(
                              $('<option></option>').val(Sectorcount.Value).html(Sectorcount.Text));

                    });

                }
                else {
                    $("#EPinNo").empty();
                }


            }

        });
    }

    function validateform() {
        $(".errortext").removeClass("errortext");

        if ($('#LoginID').val() == '') {
            $("#LoginID").addClass('errortext');
            $('#LoginID').focus();
            return false;
        } 
        if ($('#EPinNo').val() == '0') {
            $("#EPinNo").addClass('errortext');
            $('#EPinNo').focus();
            return false;
        }

        return true;
    }

    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }
</script>

<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>
