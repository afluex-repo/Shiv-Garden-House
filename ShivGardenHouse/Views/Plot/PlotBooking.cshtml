@model ShivGardenHouse.Models.Plot
@{
    ViewBag.Title = "PlotBooking";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<style>
    #divload {
        width: 100%;
        height: 100%;
        position: fixed;
        z-index: 9999;
        background: url("../files/assets/images/login-gif-11.gif") no-repeat center center rgba(0,0,0,0.25);
    }

    .errortext {
        border: 1px solid red !important;
    }
</style>
<div class="loader" id="divload"></div>


@using (Html.BeginForm("SavePlotBooking", "Plot", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="page-header">
        <div class="page-block">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="page-header-title">
                        <h4 class="m-b-10">Plot Booking</h4>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="pcoded-inner-content">
        <div class="main-body">
            <div class="page-wrapper">
                <div class="page-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5>Plot Booking</h5>
                                    <p style="color: red">
                                      
                                        @TempData["Plot"]
                                        @TempData["Booking"]
                                    </p>
                                </div>
                                <div class="card-block">


                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Select Branch <span style="color: red">*</span>
                                                @Html.DropDownListFor(m => m.BranchID, new SelectList(ViewBag.ddlBranch, "Value", "Text"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Customer ID <span style="color: red">*</span>
                                                @if (Model.PK_BookingId == null)
                                                {
                                                    @Html.TextBoxFor(m => m.CustomerID, new { @class = "form-control", @Placeholder = "Customer ID", @onchange = "return getCustomerName();" })

                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(m => m.CustomerID, new { @class = "form-control", @Placeholder = "Customer ID", @onchange = "return getCustomerName();", @readonly = "d" })
                                                }
                                                @Html.HiddenFor(m => m.UserID)
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Customer Name
                                                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", @Placeholder = "Customer Name", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Partner ID
                                                @Html.TextBoxFor(m => m.AssociateID, new { @class = "form-control", @Placeholder = "Partner ID", @onchange = "return GetAssociateNameByAssociateID();", @readonly = "abc" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Partner Name
                                                @Html.TextBoxFor(m => m.AssociateName, new { @class = "form-control", @Placeholder = "Partner Name", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" hidden="hidden">
                                            <div class="form-group">
                                                MLM LoginId <span style="color: red">*</span><span id="mlmname" class="pull-right" style="color:blue"></span>
                                                @if (Model.PK_BookingId == null)
                                                {
                                                    @Html.TextBoxFor(m => m.MLMLoginId, new { @class = "form-control", @Placeholder = "MLM LoginId", @onchange = "getmlmname()" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(m => m.MLMLoginId, new { @class = "form-control", @Placeholder = "MLM LoginId", @onchange = "getmlmname()", @readonly = "readonly" })
                                                }
                                                <span style="color:red">Note:If you don't have a MLM Id,please enter Manglam Inframlm</span>
                                            </div>

                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Select Site <span style="color: red">*</span>
                                                @Html.DropDownListFor(m => m.SiteID, new SelectList(ViewBag.ddlSite, "Value", "Text"), new { @class = "form-control", @onchange = "return onSiteChange();" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                      
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Select Sector <span style="color: red">*</span>
                                                @Html.DropDownListFor(m => m.SectorID, new SelectList(ViewBag.ddlSector, "Value", "Text"), new { @class = "form-control", @onchange = "return onSectorChange();" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Select Block <span style="color: red">*</span>
                                                @Html.DropDownListFor(m => m.BlockID, new SelectList(ViewBag.ddlBlock, "Value", "Text"), new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Plot Number <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.PlotNumber, new { @class = "form-control", @Placeholder = "Plot Number", @onchange = "return CheckPlotStatus();", @style = "text-transform:uppercase" })
                                                @Html.HiddenFor(m => m.PlotID)
                                                @Html.HiddenFor(m => m.PlotSize)
                                                @Html.HiddenFor(m => m.BookingPercent)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                     
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Actual Plot Amount <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.PlotAmount, new { @class = "form-control", @Placeholder = "Actual Plot Amount", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Actual Plot Rate <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.ActualPlotRate, new { @class = "form-control", @Placeholder = "Actual Plot Rate", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Plot Rate <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.PlotRate, new { @class = "form-control", @maxlength = "6", @Placeholder = "Plot Rate", @onchange = "return calculatePlotAmount();", onkeypress = "return isNumberOrDecimal(event);" })
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">
                                     
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Total PLC <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.TotalPLC, new { @class = "form-control", @Placeholder = "TotalPLC", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                NetPlotAmount<span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.NetPlotAmount, new { @class = "form-control", @Placeholder = "Net Plot Amount", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Payment Plan <span style="color: red">*</span>
                                                @Html.DropDownListFor(m => m.PaymentPlanID, new SelectList(ViewBag.ddlPlan, "Value", "Text"), new { @class = "form-control" })
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">
                                       
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Booking Amount <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.BookingAmount, new { @class = "form-control", @maxlength = "8", @Placeholder = "BookingAmount", @onkeypress = "return isNumberOrDecimal(event);", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Booking Date <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.BookingDate, new { @class = "form-control", @Placeholder = "Booking Date", @readonly = "readonly" })
                                            </div>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Discount (In Amount)
                                                @Html.TextBoxFor(m => m.Discount, new { @class = "form-control", @Placeholder = "Discount", @onchange = "return checkDiscount()", @onkeypress = "return isNumberOrDecimal(event);", @maxlength = "10" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                      
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Pay Amount <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.PayAmount, new { @class = "form-control", @Placeholder = "PayAmount", onkeypress = "return isNumberOrDecimal(event);", @onchange = "return validatePayAmount();" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Payment Date <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.PaymentDate, new { @class = "form-control", @Placeholder = "PaymentDate", @readonly = "readonly" })
                                            </div>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                Payment Mode <span style="color: red">*</span>
                                                @Html.DropDownListFor(m => m.PaymentMode, new SelectList(ViewBag.ddlPaymentMode, "Value", "Text"), new { @class = "form-control", @onchange = "return CheckPayMode()" })
                                            </div>
                                        </div>


                                    </div>
                                 
                                    <div class="row" id="divPaymentMode" style="display: none">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                Cheque/Transaction Number <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.TransactionNumber, new { @class = "form-control", @Placeholder = "Cheque/Transaction Number", @maxlength = "50" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                Cheque/Transaction Date <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.TransactionDate, new { @class = "form-control", @Placeholder = "Cheque/Transaction Date", @Readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                Bank Name <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", @maxlength = "100", @Placeholder = "Bank Name" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                Bank Branch <span style="color: red">*</span>
                                                @Html.TextBoxFor(m => m.BankBranch, new { @class = "form-control", @maxlength = "100", @Placeholder = "Bank Branch" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @if (Model.PK_BookingId == null)
                                                {
                                                    <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="Save" />
                                                }
                                                else
                                                {
                                                    @Html.HiddenFor(m => m.PK_BookingId, new { @Value = @Model.PK_BookingId })
                                                    <input class="btn btn-success pull-left" onclick="return validateform();" type="submit" value="Update" id="btnUpdate" name="Update" />
                                                }
                                            </div>


                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



}

<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">

<script>

    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
       
        if ($('#PaymentMode').val() != '1' && $('#PaymentMode').val() != '7' && $('#PaymentMode').val() != '8') {
            if ($('#TransactionNumber').val() == '') {
                $("#TransactionNumber").addClass('errortext');
                $('#TransactionNumber').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
            if ($('#TransactionDate').val() == '') {
                $("#TransactionDate").addClass('errortext');
                $('#TransactionDate').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
            if ($('#BankName').val() == '') {
                $("#BankName").addClass('errortext');
                $('#BankName').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
            if ($('#BankBranch').val() == '') {
                $("#BankBranch").addClass('errortext');
                $('#BankBranch').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
        }
        else {
            $('#TransactionNumber').val('');
            $('#TransactionDate').val('');
            $('#BankName').val('');
            $('#BankBranch').val('');
        }



    });

    function calculatePlotAmount() {
        var plotSize = $('#PlotSize').val();
        var plotRate = $('#PlotRate').val();
        var bookingPercent = $('#BookingPercent').val();
        var plc = $('#TotalPLC').val();
        var actplotamt = $('#PlotAmount').val();

        var plotAmount = (Number)(plotSize) * (Number)(plotRate);
        var bookingAmount = plotAmount * bookingPercent / 100;
        if ($('#TotalPLC').val() == "0" || $('#TotalPLC').val() == "" || $('#TotalPLC').val() == "0.00") {
            $("#NetPlotAmount").val(plotAmount);

        }
        else {
            var actplotamtplc = (Number)(plotAmount) + (Number)(((Number)(plotAmount) * (Number)(plc)) / 100);
            $("#NetPlotAmount").val(actplotamtplc);
        }


        $("#PlotAmount").val(plotAmount);
        $("#BookingAmount").val(bookingAmount);
    }

    function validatePayAmount() {
        debugger
        var payAmount = $('#PayAmount').val();
        var actualAmount = $('#PlotAmount').val();
        var disc = $('#Discount').val();
        if ((Number)(payAmount) > (Number)(actualAmount)) {
            $("#PayAmount").addClass('errortext');
            $('#PayAmount').focus();
            $("#PayAmount").val('');
            alert("Pay Amount cannot be greater than Actual Plot Amount.");
            return false;
        }
        else if ((Number)(payAmount) > ((Number)(actualAmount) - (Number)(disc))) {
            $("#PayAmount").addClass('errortext');
            $('#PayAmount').focus();
            $("#PayAmount").val('');
            alert("Pay Amount cannot be greater than Actual Plot Amount after discount");
            return false;
        }

        else {
            $("#PayAmount").removeClass('errortext');
            return true;
        }
    }

    function checkDiscount() {
        //alert("Called");
        var discount = $('#Discount').val();
        var actualAmount = $('#PlotAmount').val();
        var disc = $('#Discount').val();
        if ((Number)(discount) > (Number)(actualAmount)) {
            $("#Discount").addClass('errortext');
            $('#Discount').focus();
            $("#Discount").val('');
            alert("Discount cannot be greater than Actual Plot Amount.");
            return false;
        }
        else {
            var plotSize = $('#PlotSize').val();
            var plotRate = $('#PlotRate').val();

            var plotAmount = (Number)(plotSize) * (Number)(plotRate);

            var newPlotAmount = (Number)(plotAmount) - (Number)(discount);
            //alert(newPlotAmount);
            $('#PlotAmount').val(newPlotAmount);
        }
    }

    function getStateCity() {

        var pincode = $('#Pincode').val();
        $.ajax({
            url: '/Master/GetStateCity', type: 'post', dataType: 'json',
            data: { 'Pincode': pincode },
            success: function (data) {
                if (data.Result == "yes") {
                    $("#State").val(data.State);
                    $("#City").val(data.City);
                    $("#State").removeClass('errortext');
                    $("#City").removeClass('errortext');
                    $("#Pincode").removeClass('errortext');
                }
                else if (data.Result == "no") {
                    $("#State").val('');
                    $("#City").val('');
                    $("#State").addClass('errortext');
                    $("#City").addClass('errortext');
                    $("#Pincode").addClass('errortext');
                    $('#Pincode').focus();
                }
            }

        });
    }

    function GetAssociateNameByAssociateID() {
        $("#divload").css({ 'display': '' });

        var Associate = $('#AssociateID').val();
        $.ajax({
            url: '/Plot/GetAssociateName', type: 'post', dataType: 'json',
            data: { 'AssociateID': Associate },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#AssociateName").val(data.AssociateName);
                    $("#UserID").val(data.UserID);
                    $("#AssociateName").removeClass('errortext');
                    $("#AssociateID").removeClass('errortext');
                }
                else if (data.Result == "no") {
                    $("#AssociateName").val('');
                    $("#AssociateName").addClass('errortext');
                    $("#AssociateID").addClass('errortext');
                    $('#AssociateID').focus();

                    alert("Invalid Associate ID");
                    $('#AssociateID').val('');
                }
            }

        });
    }

    function getCustomerName() {

        $("#divload").css({ 'display': '' });
        var sponsorID = $('#CustomerID').val();
        $.ajax({
            url: '/Plot/GetCustomerNameFromCustomerID', type: 'post', dataType: 'json',
            data: { 'CustomerID': sponsorID },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#CustomerName").val(data.CustomerName);
                    $("#AssociateName").val(data.AssociateName);
                    $("#AssociateID").val(data.AssociateID);
                    $("#CustomerName").removeClass('errortext');
                    $("#CustomerID").removeClass('errortext');
                }
                else if (data.Result == "no") {
                    $("#CustomerName").val('');
                    $("#CustomerName").addClass('errortext');
                    $("#CustomerID").addClass('errortext');
                    $('#CustomerID').focus();
                    alert("Invalid Customer ID");
                    $('#CustomerID').val('');
                }
            }

        });
    }
    function getmlmname() {
        $("#divload").css({ 'display': '' });

        $.ajax({
            url: '/Plot/GetMLMLoginId', type: 'post', dataType: 'json',
            data: { 'LoginId': $('#MLMLoginId').val() },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "Yes") {
                    $("#mlmname").html(data.DisplayName);
                    $("#mlmname").removeClass('errortext');

                }
                else {
                    $("#MLMLoginId").val('');
                    $("#MLMLoginId").addClass('errortext');
                    $("#MLMLoginId").addClass('errortext');
                    $("#mlmname").html("");
                    alert("Invalid MLM Id");

                }
            }

        });
    }

    function validateform() {
        debugger
        $("#divload").css({ 'display': '' });

        $(".errortext").removeClass("errortext");

        if ($('#BranchID').val() == '0') {
            $("#BranchID").addClass('errortext');
            $('#BranchID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }
        if ($('#CustomerID').val() == '') {
            $("#CustomerID").addClass('errortext');
            $('#CustomerID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }
        if ($('#AssociateID').val() == '') {
            $("#AssociateID").addClass('errortext');
            $('#AssociateID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }
        //if ($('#MLMLoginId').val() == '') {
        //    $("#MLMLoginId").addClass('errortext');
        //    $('#MLMLoginId').focus();
        //    $("#divload").css({ 'display': 'none' });
        //    return false;
        //}

        if ($('#SiteID').val() == '0') {
            $("#SiteID").addClass('errortext');
            $('#SiteID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }
        if ($('#SectorID').val() == '0') {
            $("#SectorID").addClass('errortext');
            $('#SectorID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#BlockID').val() == '0') {
            $("#BlockID").addClass('errortext');
            $('#BlockID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#PlotNumber').val() == '') {
            $("#PlotNumber").addClass('errortext');
            $('#PlotNumber').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#PlotRate').val() == '') {
            $("#PlotRate").addClass('errortext');
            $('#PlotRate').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#PaymentPlanID').val() == '0') {
            $("#PaymentPlanID").addClass('errortext');
            $('#PaymentPlanID').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#BookingDate').val() == '') {
            $("#BookingDate").addClass('errortext');
            $('#BookingDate').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }


        if ($('#PayAmount').val() == '') {
            $("#PayAmount").addClass('errortext');
            $('#PayAmount').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#PaymentDate').val() == '') {
            $("#PaymentDate").addClass('errortext');
            $('#PaymentDate').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }

        if ($('#PaymentMode').val() == '0' ) {
            $("#PaymentMode").addClass('errortext');
            $('#PaymentMode').focus();
            $("#divload").css({ 'display': 'none' });
            return false;
        }


        if ($('#PaymentMode').val() != '1' && $('#PaymentMode').val() != '7' && $('#PaymentMode').val() != '8') {
            if ($('#TransactionNumber').val() == '') {
                $("#TransactionNumber").addClass('errortext');
                $('#TransactionNumber').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
            if ($('#TransactionDate').val() == '') {
                $("#TransactionDate").addClass('errortext');
                $('#TransactionDate').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
            if ($('#BankName').val() == '') {
                $("#BankName").addClass('errortext');
                $('#BankName').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
            if ($('#BankBranch').val() == '') {
                $("#BankBranch").addClass('errortext');
                $('#BankBranch').focus();
                $("#divload").css({ 'display': 'none' });
                return false;
            }
        }
        else {
            $('#TransactionNumber').val('');
            $('#TransactionDate').val('');
            $('#BankName').val('');
            $('#BankBranch').val('');
        }

        $("#divload").css({ 'display': '' });

        return true;
    }

    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }

    function onSiteChange() {
        $("#divload").css({ 'display': '' });
        var value = $('#SiteID').val();
        var values = $('#SectorID').val();
        var tr = [];
        $.ajax({
            url: "/Master/GetSiteDetails",
            Type: "Get",
            DataType: "JSON",
            data: { SiteID: value },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                var j = 1;
                if (data.Result == "yes") {
                    $('#Rate').val(data.Rate);
                    $("#SectorID").html(""); // clear before appending new list
                    $("#SectorID").empty();
                    $("#SectorID").append(
                          $('<option></option>').val(0).html('Select Sector'));
                    $.each(data.ddlSector, function (index, Sectorcount) {
                        $("#SectorID").append(
                              $('<option></option>').val(Sectorcount.Value).html(Sectorcount.Text));

                    });
                }
                else {
                    $("#SectorID").empty();
                    $('#Rate').val('');
                }
            }

        });

    }

    function onSectorChange() {

        $("#divload").css({ 'display': '' });
        var siteID = $('#SiteID').val();
        var sectorID = $('#SectorID').val();
        $.ajax({
            url: '/Master/GetBlockList', type: 'post', dataType: 'json',
            data: { 'SiteID': siteID, 'sectorID': sectorID },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                $("#BlockID").html(""); // clear before appending new list
                $("#BlockID").empty();
                $("#BlockID").append(
                      $('<option></option>').val(0).html('Select Block'));
                $.each(data.lstBlock, function (index, BlockCount) {
                    $("#BlockID").append(
                          $('<option></option>').val(BlockCount.Value).html(BlockCount.Text));
                });

            }

        });
    }

    function CheckPlotStatus() {
        debugger
        $("#divload").css({ 'display': '' });
        var siteID = $('#SiteID').val();
        var sectorID = $('#SectorID').val();
        var block = $('#BlockID').val();
        var plotno = $('#PlotNumber').val();

        $.ajax({
            url: '/Plot/CheckPlot', type: 'get', dataType: 'json',
            data: { 'SiteID': siteID, 'SectorID': sectorID, 'BlockID': block, 'PlotNumber': plotno },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#PlotNumber").removeClass('errortext');
                    $("#PlotID").val(data.PlotID);
                    $("#BookingPercent").val(data.BookingPercent);
                    $("#PlotSize").val(data.PlotSize);
                    $("#PlotAmount").val(data.PlotAmount);
                    $("#ActualPlotRate").val(data.ActualPlotRate);
                    $("#PlotRate").val(data.ActualPlotRate);
                    $("#BookingAmount").val(data.BookingAmount);
                    $("#TotalPLC").val(data.TotalPLC);
                    $("#NetPlotAmount").val(data.NetPlotAmount);
                }
                else if (data.Result == "no") {
                    alert('Invalid Plot Number !');
                    $("#PlotNumber").addClass('errortext');
                    $('#PlotNumber').focus();
                    $("#PlotNumber").val('');
                    $("#ActualPlotRate").val('');
                    $("#BookingAmount").val('');
                    $("#TotalPLC").val('');
                    $("#PlotAmount").val('');
                }
                else {
                    alert('Plot not available !');
                    $("#PlotNumber").addClass('errortext');
                    $("#PlotNumber").val('');
                    $("#PlotAmount").val('');
                    $("#ActualPlotRate").val('');
                    $("#BookingAmount").val('');
                    $("#TotalPLC").val('');
                    $("#PlotAmount").val('');
                }
            }

        });

    }

    function CheckPayMode() {
        debugger
        if ($('#PaymentMode').val() != '1' && $('#PaymentMode').val() != '7' && $('#PaymentMode').val() != '8') {
            $("#divPaymentMode").show();
        }
       
        else {
            $("#divPaymentMode").hide();
        }

    }

</script>


<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>



<script>

    $('#PaymentDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });
    $('#TransactionDate').datepicker({
        dateFormat: 'dd/mm/yy',
        changeYear: true,
        changeMonth: true,

    });
    $('#BookingDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });

</script>
